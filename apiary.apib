FORMAT: 1A

# DDD frontend API

API collection to view and submit projects, consult archive and send votes

NOTE: This document is a **work in progress**.

# API use and format specification

## Authentication
*DDD frontend API* uses [OAuth Authorization](https://oauth.net). First you create a new (or acquire existing) OAuth token using Basic Authentication. After you have acquired your token you can use it to access other resources within token' scope.
+ Every token MUST be refreshed before its expiration time,
+ Token MUST be provided in `Authorization` header,
+ Toke MUST be provided for each request that requires authentication

## Searching, Filtering, Ordering, Pagination

### Searching

This API can make a text search on endponts supporting fulltext search.

For example, when requesting a list of movies from the /movies endpoint, you may search those containing `superman` term with a request like `GET /movies?search=superman`.

### Filtering

This API can filter returned collections based on provided query parameters. Virtually any model field can be used as a filter.

For example, when requesting a list of movies from the /movies endpoint, you may want to limit these to only those of drama genre. This could be accomplished with a request like `GET /movies?genre=drama`. Here, genre is a query parameter that implements a filter.

#### Date filtering

To request a date we must use comparison operators (e.g. gt, lte, between), date should be passed in YYYY-MM-DD format.

Example:
`GET /movies?publish_date=gt:2017-08-11`
`GET /movies?publish_date=beetween:2017-08-09^2017-08-11`

### Ordering

This API can sort returned collections. A generic query parameter `sort` is used to describe sorting rules. This parameter can take a list of comma separated field, each with a possible unary negative to imply descending sort order.

E.g. `GET /movies?sort=-rating` - Retrieves a list of movies in descending order of user rating.

By default all resources are ordered by their creation time, from newest to oldest.

### Pagination

This API uses the [Link header - RFC 5988](http://tools.ietf.org/html/rfc5988#page-6) to include pagination details.

An example of a Link header is described in [GitHub documentation](https://developer.github.com/guides/traversing-with-pagination/).

This API returns total count of paged resources in `Total-Count` HTTP header.

## HTTP Methods

This API uses HTTP verbs (methods) as following:

+ `GET` - *Read* - used to **read** (or retrieve) a representation of a resource,
+ `POST` - *Create* - used to **create** new resources. In particular, it's used to create subordinate resources.
+ `PUT` - *Update/Replace* - used for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. On successful request, replaces identified resource with the request body.
+ `PATCH` - *Update/Modify* - used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource.
+ `DELETE` - *Delete* - used to **delete** a resource identified by a URI.

## Media Type

Where applicable this API MUST use the JSON media-type. Requests with a message-body are using plain JSON to set or update resource states.

`Content-type: application/json` and `Accept: application/json` headers SHOULD be set on all requests if not stated otherwise.

## Notational Conventions

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119](https://www.ietf.org/rfc/rfc2119).

## Representation of Date and Time

All exchange of date and time-related data MUST be done according to ISO 8601 standard and stored in UTC.

When returning date and time-related data `YYYY-MM-DDThh:mm:ss` format MUST be used.

## Resource IDs

This API uses short non-sequential url-friendly unique ids. Every resource id MUST consists of 32 url-friendly characters: `A-Z`, `a-z`, `0-9`, `_` and `-`.

### Example
`6eb1cb93-9874-359a-9f32-ca76e8adaa4e`

## Status Codes and Errors

This API uses HTTP status codes to communicate with the API consumer.

+ `200 OK` - Response to a successful GET, PUT, PATCH or DELETE.
+ `201 Created` - Response to a POST that results in a creation.
+ `204 No Content` - Response to a successful request that won't be returning a body (like a DELETE request).
+ `400 Bad Request` - Malformed request; form validation errors.
+ `401 Unauthorized` - When no or invalid authentication details are provided.
+ `403 Forbidden` - When authentication succeeded but authenticated user doesn't have access to the resource.
+ `404 Not Found` - When a non-existent resource is requested.
+ `405 Method Not Allowed` - Method not allowed.
+ `406 Not Acceptable` - Could not satisfy the request Accept header.
+ `415 Unsupported Media Type` - Unsupported media type in request.

### Error response

This API returns both, machine-readable error codes and human-readable error messages in response body when an error is encountered.

#### Example

##### Validation Error

```js
{
    "statusCode": 400,
    "error": "Bad Request",
    "message": "Invalid query parameters",
    "data": {
        "code": 10003,
        "validation": {
            "details":[
                {
                    "message": "\"name\" is required",
                    "path": "name",
                    "type": "any.required",
                    "context": {
                        "key": "name"
                    }
                },{
                    "message": "\"email\" must be a valid email",
                    "path": "email",
                    "type": "string.email",
                    "context": {
                        "value": "foo",
                        "key": "email"
                    }
                }
            ],
            "source": "query",
            "keys": [ "name","email" ]
        }
    }
}
```

##### Generic Error

```js
{
    "statusCode": 403,
    "error": "Forbidden",
    "message": "Your account is suspended and is not permitted to access this feature",
    "data": {
        "code": 13003
    }
}
```

#### Error Codes Dictionary

+ `10003` - Invalid query parameters
+ `10005` - Date is not in ISO 8601 standard
+ `10010` - Invalid Content-Type
+ `10011` - Invalid User-Agent
+ `10012` - Invalid or missing Application-Id
+ `11001` - Invalid or expired token
+ `11003` - Bad authentication data - *Method requires authentication but it was not presented or was wholly invalid.*
+ `11005` - Account not allowed to access this endpoint
+ `13003` - Your account is suspended and is not permitted to access this featur

# Group API Authentication
## OAuth token exchange [/oauth/token]
Access tokens are required to access protected endpoints of this API.

**Endpoint information**

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |

### Retrieve a token [POST]
Allows to retrieve a valid JSON Web Token for username and password.

+ Request (application/json)
    + Headers
    
            Accept: application/json
                
    + Attributes (OAuth bearer grant request)


+ Response 200 (application/json; charset=UTF-8)
    + Attributes (OAuth valid response)

### Refresh a token [POST /oauth/token/refresh]
Allows to retrieve a valid JSON Web Token for username and password.

+ Request (application/json)
    + Headers
    
            Accept: application/json
                
    + Attributes (OAuth bearer token refresh)


+ Response 200 (application/json; charset=UTF-8)
    + Attributes (OAuth valid response)


## OAuth 2 Bearer Token protected resource [/protected]
### Status [GET]
+ Request
    + Headers
    
            Accept: application/json
            Authentication: Bearer <token>

+ Response 200 (application/json; charset=UTF-8)
    + Attributes (Server response)

# Group User
## Users 

### User list [GET /api/users]

Returns users list

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |
| Fulltext enabled        | Yes |

+ Request 
    + Headers
    
            Accept: application/json
            
+ Response 200 (application/json; charset=UTF-8)
    + Attributes (array[User info])

### Retrieve a user [GET /api/users/{id}]

Retrieves the details of an existing user.

|                         |     |
|-------------------------|-----|
| Requires authentication | Yes |
| Has restricted scope    | No  |

**Error codes**

|       |         |                               |
|-------|---------| ----------------------------- |
| `400` | `1000`  | Referenced resource not found |

+ Request
    + Headers
    
            Accept: application/json
            Authentication: Bearer <token>

+ Parameters
    + id: `65973ae5-9ad1-3f16-aca2-3ba9e950ce13` (string) - user id.
    
+ Response 200 (application/json; charset=UTF-8)
    + Attributes (User info)

+ Response 404

### Register a new user [POST /api/register]

Creates a new user account.

+ Provided email address MUST be unique.
+ Passwords MUST have at least six characters.
+ Passwords MUST NOT contain the user name or parts of the user''s full name, such as his first name.
+ Passwords MUST use at least one lowercase letter, one uppercase letter, and a number.

After successful registration a confirmation email MUST be sent to provided address.

**Endpoint information**

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |

**Error codes**

|       |         |                                             |
|-------|---------| ------------------------------------------- |
| `400` | `4001` | Password doesn't match password guidelines  |
| `400` | `3001` | User already exists                         |

+ Request (application/json)
    + Headers
    
            Accept: application/json
            
    + Attributes (User Request)

+ Response 201 (application/json; charset=UTF-8)
    + Attributes (User info)

## Current user profile [/api/profile]

Current user MUST be identifed by JWT provided in request header.

### Retrieve profile of the current user [GET]

Retrieves the profile of the current user.

**Endpoint information**

|                         |     |
|-------------------------|-----|
| Requires authentication | Yes |
| Has restricted scope    | No  |

+ Request
    + Headers
    
            Accept: application/json
            Authentication: Bearer <token>

+ Response 200 (application/json; charset=UTF-8)
    + Attributes (User full)

### Partialy update a profile of the current user [PATCH]

Updates a profile of the current user setting the values of the parameters passed. Any parameters not provided will be left unchanged.

**Endpoint information**

|                         |     |
|-------------------------|-----|
| Requires authentication | Yes |
| Has restricted scope    | No  |

+ Request
    + Headers
    
            Accept: application/json
            Authentication: Bearer <token>

    + Attributes
        + name: `Ben` (string) - First name of the user.

+ Response 200 (application/json; charset=UTF-8)
    + Attributes (User full)

## User password [/api/profile/password]

### Change a password of the current user [PUT]

Changes user password.

After password is changed all access tokens issued for this user prior to password change must be invalidated.

**Endpoint information**

|                         |     |
|-------------------------|-----|
| Requires authentication | Yes |
| Has restricted scope    | No  |

**Error codes**

|       |         |                                           |
|-------|---------| ----------------------------------------- |
| `400` | `4001` | Password doesn't match password guidelines |

+ Request (application/json)
    + Headers
    
            Accept: application/json
            Authentication: Bearer <token>

    + Attributes
        + old_password: `secret` (string, required)
        + new_password: `$3C6e7` (string, required)

+ Response 204

# Group Projects

## Projects [/api/projects]

### List all projects [GET]

Returns a list of votable projects. Default sorting is decremental expire date.

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |
| Fulltext enabled        | Yes |

+ Request 
    + Headers
    
            Accept: application/json
            
+ Response 200 (application/json; charset=UTF-8)
    + Attributes (array[Project])

## Project [/api/projects/{id}]

+ Parameters
    + id: `65973ae5-9ad1-3f16-aca2-3ba9e950ce13` (string) - id of the project.

### Retrieve a project [GET]

Retrieves the details of an existing project.

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |

**Error codes**

|       |         |                               |
|-------|---------| ----------------------------- |
| `400` | `1000`  | Referenced resource not found |

+ Request
    + Headers
    
            Accept: application/json

+ Response 200 (application/json; charset=UTF-8)
    + Attributes (Project Single)

+ Response 404

# Group Categories

## Category [/api/categories]

### Category list [GET]

Returns a category list

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |

+ Request
    + Headers
    
            Accept: application/json
            
+ Response 200 (application/json; charset=UTF-8)
    + Attributes (array[Category])

## Category detail [/api/categories/{id}]
+ Request
    + Headers
    
            Accept: application/json
            
+ Parameters
    + id: `6eb1cb93-9874-359a-9f32-ca76e8adaa4e` (string) - category id.

### Retrieve a category [GET]

Retrieves the category details and all related projects.

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |

**Error codes**

|       |         |                               |
|-------|---------| ----------------------------- |
| `400` | `1000`  | Referenced resource not found |
+ Request
    + Headers
    
            Accept: application/json
            
+ Response 200 (application/json; charset=UTF-8)
    + Attributes (Category)

+ Response 404

# Group Tags

## Tags [/api/tags]

### Tags list [GET]

Returns a tag list

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |

+ Request
    + Headers
    
            Accept: application/json
            
+ Response 200 (application/json; charset=UTF-8)
    + Attributes (array[Tag])

## Tags detail [/api/tags/{id}]
+ Request
    + Headers
    
            Accept: application/json
            
+ Parameters
    + id: `6eb1cb93-9874-359a-9f32-ca76e8adaa4e` (string) - category id.

### Retrieve a tag [GET]

Retrieves the tag details and all related projects.

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |

**Error codes**

|       |         |                               |
|-------|---------| ----------------------------- |
| `400` | `1000`  | Referenced resource not found |
+ Request
    + Headers
    
            Accept: application/json
            
+ Response 200 (application/json; charset=UTF-8)
    + Attributes (Tag)

+ Response 404

# Group Votes

## Vote info [/api/votes]
+ Request
    + Headers
    
            Accept: application/json

### Vote list [GET]

Returns a vote list

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |

+ Request
    + Headers
    
            Accept: application/json
            
+ Response 200 (application/json; charset=UTF-8)
    + Attributes (array[Vote])
            
### Retrieve a vote [GET /api/votes/{id}]

Retrieves a single vote

|                         |     |
|-------------------------|-----|
| Requires authentication | Yes  |
| Has restricted scope    | No  |

**Error codes**

|       |         |                               |
|-------|---------| ----------------------------- |
| `400` | `1000`  | Referenced resource not found |

+ Parameters
    + id: `6eb1cb93-9874-359a-9f32-ca76e8adaa4e` (string) - vote id.
    
+ Request
    + Headers
    
            Accept: application/json
            
+ Response 200 (application/json; charset=UTF-8)
    + Attributes (Vote)

+ Response 404

### Make a vote [POST]

Post a vote rating for a project

|                         |     |
|-------------------------|-----|
| Requires authentication | Yes  |
| Has restricted scope    | No  |

**Error codes**

|       |         |                               |
|-------|---------| ----------------------------- |
| `400` | `1000`  | Referenced resource not found |
+ Request
    + Headers
    
            Accept: application/json
            Content-Type: application/json

    + Attributes (User vote)
            
+ Response 201 (application/json; charset=UTF-8)
    + Attributes (Vote)

# Group Pages

## Pages list [/api/pages]

### List all pages [GET]

Returns a list of page

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |

+ Request
    + Headers
    
            Accept: application/json
            
+ Response 200 (application/json; charset=UTF-8)
    + Attributes (array[Page])

### Retrieve a page [GET /api/pages/{id}]

Retrieves the page content

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |

**Error codes**

|       |         |                               |
|-------|---------| ----------------------------- |
| `400` | `1000`  | Referenced resource not found |

+ Request
    + Headers
    
            Accept: application/json
            
+ Parameters
    + id: `6eb1cb93-9874-359a-9f32-ca76e8adaa4e` (string) - page id.

+ Response 200 (application/json; charset=UTF-8)
    + Attributes (Page)

+ Response 404

# Group Posts

## Post list [/api/posts]

### List all posts [GET]

Returns a list of published post, default sorting is decremental publish date.

Retrieves the post content

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |

+ Request
    + Headers
    
            Accept: application/json
            
+ Response 200 (application/json; charset=UTF-8)
    + Attributes (array[Post])

## Post [/api/posts/{id}]

### Retrieve a post [GET]

Retrieves the post content

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |
| Fulltext enabled        | Yes |

**Error codes**

|       |         |                               |
|-------|---------| ----------------------------- |
| `400` | `1000`  | Referenced resource not found |

+ Request
    + Headers
    
            Accept: application/json
            
+ Parameters
    + id: `6eb1cb93-9874-359a-9f32-ca76e8adaa4e` (string) - post id.

+ Response 200 (application/json; charset=UTF-8)
    + Attributes (Post)

+ Response 404

# Group Images

## Images [/api/images/{id}]

+ Request
    + Headers
    
            Accept: application/json
            
+ Parameters
    + id: `6eb1cb93-9874-359a-9f32-ca76e8adaa4e` (string) - image id.

### Retrieve an image [GET]

Retrieves the image details

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |

**Error codes**

|       |         |                               |
|-------|---------| ----------------------------- |
| `400` | `1000`  | Referenced resource not found |

#### Media url

The image resource retrieved using `/image` endpoint returns a full URL to retrieve the full size media.

E.g. `http://ddd.app/images/avatar/5b141780-af33-11e7-b107-33f3ff5354b7.jpg`

Is it possible to request a custom sized copy for this image using the baseurl and filename.
Image will be resized preserving image size ratio.

E.g. `http://ddd.app/images/crops/avatar/5b141780-af33-11e7-b107-33f3ff5354b7-200x200.jpg`

+ Request
    + Headers
    
            Accept: application/json

+ Response 200 (application/json; charset=UTF-8)
    + Attributes (Image)

+ Response 404

# Group Preview search

## Preview Search  [/api/search]

### Search Query [GET]

Returns a list of published post, default sorting is decremental publish date.

Retrieves the post content

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |

+ Request
    + Headers
    
            Accept: application/json

    + Attributes (Search query)            
        
+ Response 200 (application/json; charset=UTF-8)
    + Attributes (Preview Search)


# Data Structures

## OAuth bearer grant request (object)
+ `grant_type`: password (enum, required)
+ `client_id`: 3 - shared client id and secret
+ `client_secret`: `mPtOYaGzGTCrAZ4RDy9vjRiZKwqTYl52InFDXVQh`
+ username: `john.doe@mail.com` (string, required) - User email address
+ password: `QXR0mi38a2` (string, required) - User password

## OAuth valid response (object)
+ `access_token`: `eyJhbGciOiJIUzI1NiJ9.e30.XmNK3GpH3Ys_7wsYBfq4C3M6goz71I7dTgUkuIa5lyQ` (string, required) - valid JWT
+ `expires_in`: 300 (number, required)
+ `token_type`: Bearer (string, required)
+ `refresh_token`: `def502004a4146b8d2eb4a036d928321e571ebb01f45b8eafeeef9c822acbf9c5596941cb39b0d8a0aaf00b2507059b7c2c5456167f6b4f49ea00a7ee6540b397df2994c8899e014ac8ee370f22b96ebaaa4e2944f3fa602f1862a12e2090c28c5ffd697ef7382d266f523187c7fa1b696b6837b9dce68a05555af9fb0d509c712c077699cc8914290fc5c81b640a1908a55e1ffdb2b76543011c4289d00ee969d1195aa3fbd8e37d503e1f95bad783fbec53c6d35227cb4924d1e829ed88662feffa6d9d5e502f2025ab526a210474320324c71c1e319a40178b9f9898101d84bc0c5530a18414a356847fb5b5696e609ba840fc116e9484830d13a616c5d145d16e45c0ed28e052cbf94ebc263ff52d54c57fcc9e118bedcf7ecdf10f749129f4b86222fc9f2c3d5951eafb67fafb29c27c1748dc340d509d7d7781ab186b215250d41358dd901ca6bc799a1752a10712e1cba60a705571c9ca07ddd07240b7d` (string, required)

## OAuth bearer token refresh (object)
+ `grant_type`: refresh_token (enum, required)
+ `client_id`: 3 - shared client id and secret
+ `client_secret`: `mPtOYaGzGTCrAZ4RDy9vjRiZKwqTYl52InFDXVQh`
+ `refresh_token`: `def502004a4146b8d2eb4a036d928321e571ebb01f45b8eafeeef9c822acbf9c5596941cb39b0d8a0aaf00b2507059b7c2c5456167f6b4f49ea00a7ee6540b397df2994c8899e014ac8ee370f22b96ebaaa4e2944f3fa602f1862a12e2090c28c5ffd697ef7382d266f523187c7fa1b696b6837b9dce68a05555af9fb0d509c712c077699cc8914290fc5c81b640a1908a55e1ffdb2b76543011c4289d00ee969d1195aa3fbd8e37d503e1f95bad783fbec53c6d35227cb4924d1e829ed88662feffa6d9d5e502f2025ab526a210474320324c71c1e319a40178b9f9898101d84bc0c5530a18414a356847fb5b5696e609ba840fc116e9484830d13a616c5d145d16e45c0ed28e052cbf94ebc263ff52d54c57fcc9e118bedcf7ecdf10f749129f4b86222fc9f2c3d5951eafb67fafb29c27c1748dc340d509d7d7781ab186b215250d41358dd901ca6bc799a1752a10712e1cba60a705571c9ca07ddd07240b7d` (string, required)

## Server response (object)
+ status: ok (string, required)

## Resource (object)
+ id (string, required) - Short non-sequential url-friendly unique id.
+ createdAt: `2016-07-01T15:11:09` (string) - When this resource was created.
+ updatedAt: `2016-07-01T15:11:09` (string) - When this resource was last updated.

## User Request (object)
+ email: `john.whatson@mail.com` (string, required) - Unique email address of the user.
+ password: `Eey7fEkvTR4KHtTuAjb` (string, required) - Password
+ name: `John` (string, optional, nullable) - First name of the user.
+ lastname: `Watson` (string, optional, nullable) - Last name of the user.
+ avatar (string, optional, nullable) - uploaded avatar image
+ role: `Physician` (string, required)
+ abstract: `Medical doctor. Formerly in the British Army, served as an army surgeon in India. ` (string)
+ billing_address
  + street: `221B Baker Street` (string, required)
  + zip: `NW1 6XE`(string, required)
  + city: `London`(string, required)
  + country: `United Kingdom`(string, required)
  + vat_id: `UK123123123123121` (string, required)
+ `company_name`: `Holmes & Watson` (string, required) - Agency business name
+ website: `https://it.wikipedia.org/wiki/Arthur_Conan_Doyle` (string, required) Agency website URL
+ description: `Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.` (string, optional, nullable) - Agency brief description

## User full (Resource)
+ email: `john.doe@mail.com` (string, required) - Unique email address of the user.
+ name: `John` (string, optional, nullable) - First name of the user.
+ lastname: `Doe` (string, optional, nullable) - Last name of the user.
+ role: `Web Designer` (string, required) - User work role
+ abstract: `natus error sit voluptatem accusantium doloremque laudantiu` (string, required) - User abstract
+ avatar (Image, optional, nullable) - uploaded avatar image
+ is_referee: false (boolean) - Is referee
+ billing_address
  + street: `221B Baker Street` (string, required)
  + zip: `NW1 6XE`(string, required)
  + city: `London`(string, required)
  + country: `United Kingdom`(string, required)
  + vat_id: `UK123123123123121` (string, required)
+ votes (array[Project Voted])

## User info (Resource)
+ email: `john.doe@mail.com` (string, required) - Unique email address of the user.
+ name: `John` (string, optional, nullable) - First name of the user.
+ lastname: `Doe` (string, optional, nullable) - Last name of the user.
+ role: `Web Designer` (string, required) - User work role
+ abstract: `natus error sit voluptatem accusantium doloremque laudantiu` (string, required) - User abstract
+ avatar (Image, optional, nullable) -uploaded avatar image
+ `company_name`: `Magespecialist` (string, required) - Agency business name
+ website: `https://www.magespecialist.it` (string, required) Agency website URL
+ description: `Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.` (string, optional, nullable) - Agency brief description
+ is_referee: false (boolean) - Is referee

## Referee (User info)
+ is_referee: true (boolean, required) - Is referee

## Vote (Resource)
+ vote: 73 (number, required) Vote rating
+ vote_date: `2016-07-01T15:11:09.553Z` (string) - Vote timestamp.
+ vote_level: user, referee (enum)
+ project (Project, required)
+ user (User info, required)

## Project Voted (Vote)
+ project (Project)

## User Votes (Vote)
+ user (User info)

## User vote
+ project_id: `6eb1cb93-9874-359a-9f32-ca76e8adaa4e` (string, required) - Short non-sequential url-friendly unique id.
+ vote: 73 (number, required) Vote rating

## Category (Resource)
+ title: `Web/App` (string, required) - category title
+ stub: `web` (string, required) - category stub
+ project_count: 42 (number) - project count
+ images: array[Image]

## Tag (Resource)
+ title: `video` (string, required) - tag title
+ stub: `video` (string, required) - tag stub
+ project_count: 13 (number) - project count

## Image (Resource)
+ title: `Project logo` (string, required) - Image title
+ filename: `logo_magespecialist_header.png` (string, required) - Image filename
+ baseurl: `https://api.ddd.it/public/images/` (string, required) - Full width base url
+ url: `http://ddd.app/images/tests/avatar/3c38ef40-be46-11e7-b437-1d83d9541285.jpg` (string, required) - Full image url,

## Project (Resource)
+ publish_date: `2016-07-01T15:11:09` (string)
+ title: `Astonishing Project` (string, required) - project title
+ description: `Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?` (string, required) - project HTML description
+ stub: `web` (string, required) - category stub
+ website: `https://www.magespecialist.it` (string, required) Project URL
+ owner (User info)
+ category (Category)
+ tags (array[Tag])
+ images (array[Image])
+ video: `https://player.vimeo.com/video/217499569?portrait=0&badge=0` (string) - the embed video URL
+ referee_rating: `86.5` (number, optional, nullable) - referees average votes
+ user_rating: `79.5` (number, optional, nullable) - users average result
+ total_rating: `81.5` (number, optional, nullable) - current result
+ in_nomination (boolean) - true if project is eligible for voting
+ vote_expiration: `2016-07-01T15:11:09` (string) - When the project vote will expire.
+ archived_from `2016-07-01T15:11:09` (string) - When the project has been archived.
+ `is_dow_awarded`: true (boolean) - DOW award
+ `is_dom_awarded`: false (boolean) - DOM award
+ `is_doy_awarded`: false (boolean) - DOY award
+ `is_special_awarded`: true (boolean) - special award
+ `is_authorized`: true (boolean) - false if the project has been blocked
+ dom_award `2016-07-01T15:11:09` (string) - If the project has received won the DOW award, this is the award date.
+ dow_award `2016-07-01T15:11:09` (string) - If the project has received won the DOM award, this is the award date.
+ doy_award `2016-07-01T15:11:09`(string) - If the project has received won the DOY award, this is the award date.
+ special_award `2016-07-01T15:11:09.553Z` (string) - If the project has received the special award, this is the award date.

## Project Single (Project)
+ votes (array[User Votes])
+ is_payed: true (boolean) - true if the project has completed payment process
+ payment (Payment)

## Payment
+ date: `2016-07-01T15:11:09` (string) - payment date
+ status: completed, canceled (enum)
+ mehtod: 'PayPal' (string, required)

## Page
+ parent_id: `6eb1cb93-9874-359a-9f32-ca76e8adaa4e` (string, optional, nullable) - Current Page parent
+ title: `Lorem ipsum` (string)
+ content: `Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?` (string, required) - page HTML content
+ description: `Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium` (string, required) - page abstract
+ stub: `lipsum` (string, required) - page stub
+ children: `6eb1cb93-9874-359a-9f32-ca76e8adaa4e`, `Gns8EazNP2Ud`, `t7hWQaQV9cVH` (array[string], optional)

## Post (Page)
+ publish_date: `2016-07-01T15:11:09` (string) - publish date
+ interviewed (User info, optional, nullable)

## Search query
+ q: `Lorem ipsum` (string, required)

## Preview Search
+ count
    + project: 2 (number, required)
    + user: 1 (number, required)
    + post: 5 (number, required)
+ project (array[Project])
+ user (array[User info])
+ post (array[Post])